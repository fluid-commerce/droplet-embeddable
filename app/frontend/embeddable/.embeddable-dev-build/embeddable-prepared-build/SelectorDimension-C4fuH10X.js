import { e as ee } from "./Spinner-BeNoTciJ-DsMN3-m0.js";
import { d as defineComponent } from "./index.esm-CVE60fla.js";
import { j } from "./jsx-runtime-CjQXaSqQ-CjMA1-fF.js";
import { A } from "./Selector-CCh6GRlF-DS-lUtiW.js";
import { r, n } from "./Selector.utils-cEIYEuKn-DO9PZ0p4.js";
const d = (e) => {
  const t = (a) => {
    const n2 = e.options.find((o) => o.name === a);
    e.onChange(n2);
  };
  return /* @__PURE__ */ j.jsx(
    A,
    {
      title: e.title,
      options: n(e.options),
      defaultValue: r(e.defaultValue, e.options),
      unclearable: !e.allowNoValue,
      onChange: t
    }
  );
}, c = {
  name: "SelectorDimension",
  label: "Dimensions single-select",
  defaultWidth: 300,
  defaultHeight: 80,
  classNames: ["on-top"],
  category: "Controls: measures and dimensions",
  inputs: [
    {
      name: "ds",
      type: "dataset",
      label: "Dataset",
      description: "Dataset",
      category: "Dropdown values"
    },
    {
      name: "options",
      array: true,
      type: "dimension",
      label: "Choices",
      config: {
        dataset: "ds"
      },
      category: "Dropdown values",
      inputs: [
        {
          name: "overrideName",
          type: "string",
          label: "Override name",
          description: "Overrides the default name shown"
        }
      ]
    },
    {
      name: "defaultValue",
      type: "dimension",
      label: "Default value",
      category: "Pre-configured variables",
      config: {
        dataset: "ds"
      }
    },
    {
      name: "title",
      type: "string",
      label: "Title",
      category: "Settings"
    },
    {
      name: "allowNoValue",
      type: "boolean",
      label: "Allow no value",
      category: "Settings",
      defaultValue: false
    }
  ],
  events: [
    {
      name: "onChange",
      label: "Change",
      properties: [
        {
          name: "value",
          type: "dimension"
        }
      ]
    }
  ],
  variables: [
    {
      name: "Dimension choice",
      type: "dimension",
      inputs: ["defaultValue"],
      events: [{ name: "onChange", property: "value" }]
    }
  ]
}, v = defineComponent(d, c, {
  props: (e, [t]) => e.ds ? {
    ...e,
    options: e.options || []
  } : {
    ...e,
    options: []
  },
  events: {
    onChange: (e) => ({
      value: e || ee.noFilter()
    })
  }
});
export {
  v as default,
  c as meta
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0b3JEaW1lbnNpb24tQzRmdUgxMFguanMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaHJpc3RvcGhlcmNhcmxzb24vZmx1aWQvZHJvcGxldC1lbWJlZGRhYmxlL2FwcC9mcm9udGVuZC9lbWJlZGRhYmxlL25vZGVfbW9kdWxlcy9AZW1iZWRkYWJsZS5jb20vdmFuaWxsYS1jb21wb25lbnRzL2Rpc3QvU2VsZWN0b3JEaW1lbnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgViBhcyBsIH0gZnJvbSBcIi4vaW5kZXguZXNtLUpBaF9LMVZHLmpzXCI7XG5pbXBvcnQgeyBkZWZpbmVDb21wb25lbnQgYXMgaSB9IGZyb20gXCJAZW1iZWRkYWJsZS5jb20vcmVhY3RcIjtcbmltcG9ydCB7IGogYXMgcyB9IGZyb20gXCIuL2pzeC1ydW50aW1lLUNqUVhhU3FRLmpzXCI7XG5pbXBvcnQgeyBTIGFzIHIgfSBmcm9tIFwiLi9TZWxlY3Rvci1DQ2g2R1JsRi5qc1wiO1xuaW1wb3J0IHsgYiBhcyBtLCBhIGFzIHUgfSBmcm9tIFwiLi9TZWxlY3Rvci51dGlscy1jRUlZRXVLbi5qc1wiO1xuY29uc3QgZCA9IChlKSA9PiB7XG4gIGNvbnN0IHQgPSAoYSkgPT4ge1xuICAgIGNvbnN0IG4gPSBlLm9wdGlvbnMuZmluZCgobykgPT4gby5uYW1lID09PSBhKTtcbiAgICBlLm9uQ2hhbmdlKG4pO1xuICB9O1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovIHMuanN4KFxuICAgIHIsXG4gICAge1xuICAgICAgdGl0bGU6IGUudGl0bGUsXG4gICAgICBvcHRpb25zOiB1KGUub3B0aW9ucyksXG4gICAgICBkZWZhdWx0VmFsdWU6IG0oZS5kZWZhdWx0VmFsdWUsIGUub3B0aW9ucyksXG4gICAgICB1bmNsZWFyYWJsZTogIWUuYWxsb3dOb1ZhbHVlLFxuICAgICAgb25DaGFuZ2U6IHRcbiAgICB9XG4gICk7XG59LCBjID0ge1xuICBuYW1lOiBcIlNlbGVjdG9yRGltZW5zaW9uXCIsXG4gIGxhYmVsOiBcIkRpbWVuc2lvbnMgc2luZ2xlLXNlbGVjdFwiLFxuICBkZWZhdWx0V2lkdGg6IDMwMCxcbiAgZGVmYXVsdEhlaWdodDogODAsXG4gIGNsYXNzTmFtZXM6IFtcIm9uLXRvcFwiXSxcbiAgY2F0ZWdvcnk6IFwiQ29udHJvbHM6IG1lYXN1cmVzIGFuZCBkaW1lbnNpb25zXCIsXG4gIGlucHV0czogW1xuICAgIHtcbiAgICAgIG5hbWU6IFwiZHNcIixcbiAgICAgIHR5cGU6IFwiZGF0YXNldFwiLFxuICAgICAgbGFiZWw6IFwiRGF0YXNldFwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiRGF0YXNldFwiLFxuICAgICAgY2F0ZWdvcnk6IFwiRHJvcGRvd24gdmFsdWVzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFwib3B0aW9uc1wiLFxuICAgICAgYXJyYXk6ICEwLFxuICAgICAgdHlwZTogXCJkaW1lbnNpb25cIixcbiAgICAgIGxhYmVsOiBcIkNob2ljZXNcIixcbiAgICAgIGNvbmZpZzoge1xuICAgICAgICBkYXRhc2V0OiBcImRzXCJcbiAgICAgIH0sXG4gICAgICBjYXRlZ29yeTogXCJEcm9wZG93biB2YWx1ZXNcIixcbiAgICAgIGlucHV0czogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJvdmVycmlkZU5hbWVcIixcbiAgICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgICAgIGxhYmVsOiBcIk92ZXJyaWRlIG5hbWVcIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJPdmVycmlkZXMgdGhlIGRlZmF1bHQgbmFtZSBzaG93blwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFwiZGVmYXVsdFZhbHVlXCIsXG4gICAgICB0eXBlOiBcImRpbWVuc2lvblwiLFxuICAgICAgbGFiZWw6IFwiRGVmYXVsdCB2YWx1ZVwiLFxuICAgICAgY2F0ZWdvcnk6IFwiUHJlLWNvbmZpZ3VyZWQgdmFyaWFibGVzXCIsXG4gICAgICBjb25maWc6IHtcbiAgICAgICAgZGF0YXNldDogXCJkc1wiXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBcInRpdGxlXCIsXG4gICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgbGFiZWw6IFwiVGl0bGVcIixcbiAgICAgIGNhdGVnb3J5OiBcIlNldHRpbmdzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFwiYWxsb3dOb1ZhbHVlXCIsXG4gICAgICB0eXBlOiBcImJvb2xlYW5cIixcbiAgICAgIGxhYmVsOiBcIkFsbG93IG5vIHZhbHVlXCIsXG4gICAgICBjYXRlZ29yeTogXCJTZXR0aW5nc1wiLFxuICAgICAgZGVmYXVsdFZhbHVlOiAhMVxuICAgIH1cbiAgXSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJvbkNoYW5nZVwiLFxuICAgICAgbGFiZWw6IFwiQ2hhbmdlXCIsXG4gICAgICBwcm9wZXJ0aWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcInZhbHVlXCIsXG4gICAgICAgICAgdHlwZTogXCJkaW1lbnNpb25cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfVxuICBdLFxuICB2YXJpYWJsZXM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcIkRpbWVuc2lvbiBjaG9pY2VcIixcbiAgICAgIHR5cGU6IFwiZGltZW5zaW9uXCIsXG4gICAgICBpbnB1dHM6IFtcImRlZmF1bHRWYWx1ZVwiXSxcbiAgICAgIGV2ZW50czogW3sgbmFtZTogXCJvbkNoYW5nZVwiLCBwcm9wZXJ0eTogXCJ2YWx1ZVwiIH1dXG4gICAgfVxuICBdXG59LCB2ID0gaShkLCBjLCB7XG4gIHByb3BzOiAoZSwgW3RdKSA9PiBlLmRzID8ge1xuICAgIC4uLmUsXG4gICAgb3B0aW9uczogZS5vcHRpb25zIHx8IFtdXG4gIH0gOiB7XG4gICAgLi4uZSxcbiAgICBvcHRpb25zOiBbXVxuICB9LFxuICBldmVudHM6IHtcbiAgICBvbkNoYW5nZTogKGUpID0+ICh7XG4gICAgICB2YWx1ZTogZSB8fCBsLm5vRmlsdGVyKClcbiAgICB9KVxuICB9XG59KTtcbmV4cG9ydCB7XG4gIHYgYXMgZGVmYXVsdCxcbiAgYyBhcyBtZXRhXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VsZWN0b3JEaW1lbnNpb24uanMubWFwXG4iXSwibmFtZXMiOlsibiIsInMiLCJyIiwidSIsIm0iLCJpIiwibCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLSyxNQUFDLElBQUksQ0FBQyxNQUFNO0FBQ2YsUUFBTSxJQUFJLENBQUMsTUFBTTtBQUNmLFVBQU1BLEtBQUksRUFBRSxRQUFRLEtBQUssQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDO0FBQzVDLE1BQUUsU0FBU0EsRUFBQztBQUFBLEVBQ2Q7QUFDQSxTQUF1QkMsa0JBQUU7QUFBQSxJQUN2QkM7QUFBQUEsSUFDQTtBQUFBLE1BQ0UsT0FBTyxFQUFFO0FBQUEsTUFDVCxTQUFTQyxFQUFFLEVBQUUsT0FBTztBQUFBLE1BQ3BCLGNBQWNDLEVBQUUsRUFBRSxjQUFjLEVBQUUsT0FBTztBQUFBLE1BQ3pDLGFBQWEsQ0FBQyxFQUFFO0FBQUEsTUFDaEIsVUFBVTtBQUFBLElBQ2hCO0FBQUEsRUFDQTtBQUNBLEdBQUcsSUFBSTtBQUFBLEVBQ0wsTUFBTTtBQUFBLEVBQ04sT0FBTztBQUFBLEVBQ1AsY0FBYztBQUFBLEVBQ2QsZUFBZTtBQUFBLEVBQ2YsWUFBWSxDQUFDLFFBQVE7QUFBQSxFQUNyQixVQUFVO0FBQUEsRUFDVixRQUFRO0FBQUEsSUFDTjtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsYUFBYTtBQUFBLE1BQ2IsVUFBVTtBQUFBLElBQ2hCO0FBQUEsSUFDSTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsUUFBUTtBQUFBLFFBQ04sU0FBUztBQUFBLE1BQ2pCO0FBQUEsTUFDTSxVQUFVO0FBQUEsTUFDVixRQUFRO0FBQUEsUUFDTjtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFVBQ04sT0FBTztBQUFBLFVBQ1AsYUFBYTtBQUFBLFFBQ3ZCO0FBQUEsTUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNJO0FBQUEsTUFDRSxNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxVQUFVO0FBQUEsTUFDVixRQUFRO0FBQUEsUUFDTixTQUFTO0FBQUEsTUFDakI7QUFBQSxJQUNBO0FBQUEsSUFDSTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsVUFBVTtBQUFBLElBQ2hCO0FBQUEsSUFDSTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsVUFBVTtBQUFBLE1BQ1YsY0FBYztBQUFBLElBQ3BCO0FBQUEsRUFDQTtBQUFBLEVBQ0UsUUFBUTtBQUFBLElBQ047QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFlBQVk7QUFBQSxRQUNWO0FBQUEsVUFDRSxNQUFNO0FBQUEsVUFDTixNQUFNO0FBQUEsUUFDaEI7QUFBQSxNQUNBO0FBQUEsSUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNFLFdBQVc7QUFBQSxJQUNUO0FBQUEsTUFDRSxNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixRQUFRLENBQUMsY0FBYztBQUFBLE1BQ3ZCLFFBQVEsQ0FBQyxFQUFFLE1BQU0sWUFBWSxVQUFVLFFBQU8sQ0FBRTtBQUFBLElBQ3REO0FBQUEsRUFDQTtBQUNBLEdBQUcsSUFBSUMsZ0JBQUUsR0FBRyxHQUFHO0FBQUEsRUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEtBQUs7QUFBQSxJQUN4QixHQUFHO0FBQUEsSUFDSCxTQUFTLEVBQUUsV0FBVyxDQUFBO0FBQUEsRUFDMUIsSUFBTTtBQUFBLElBQ0YsR0FBRztBQUFBLElBQ0gsU0FBUyxDQUFBO0FBQUEsRUFDYjtBQUFBLEVBQ0UsUUFBUTtBQUFBLElBQ04sVUFBVSxDQUFDLE9BQU87QUFBQSxNQUNoQixPQUFPLEtBQUtDLEdBQUUsU0FBUTtBQUFBLElBQzVCO0FBQUEsRUFDQTtBQUNBLENBQUM7IiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzBdfQ==
