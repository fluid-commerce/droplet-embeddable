import { e as ee } from "./Spinner-BeNoTciJ-DsMN3-m0.js";
import { d as defineComponent } from "./index.esm-CVE60fla.js";
import { j } from "./jsx-runtime-CjQXaSqQ-CjMA1-fF.js";
import { A } from "./Selector-CCh6GRlF-DS-lUtiW.js";
import { r, n } from "./Selector.utils-cEIYEuKn-DO9PZ0p4.js";
const d = (e) => {
  const a = (t) => {
    const n2 = e.options.find((o) => o.name === t);
    e.onChange(n2);
  };
  return /* @__PURE__ */ j.jsx(
    A,
    {
      title: e.title,
      options: n(e.options),
      defaultValue: r(e.defaultValue, e.options),
      unclearable: !e.allowNoValue,
      onChange: a
    }
  );
}, c = {
  name: "SelectorMeasure",
  label: "Measures single-select",
  defaultWidth: 300,
  defaultHeight: 80,
  classNames: ["on-top"],
  category: "Controls: measures and dimensions",
  inputs: [
    {
      name: "ds",
      type: "dataset",
      label: "Dataset",
      description: "Dataset",
      category: "Dropdown values"
    },
    {
      name: "options",
      array: true,
      type: "measure",
      label: "Choices",
      config: {
        dataset: "ds"
      },
      category: "Dropdown values",
      inputs: [
        {
          name: "overrideName",
          type: "string",
          label: "Override name",
          description: "Overrides the default name shown"
        }
      ]
    },
    {
      name: "defaultValue",
      type: "measure",
      label: "Default value",
      category: "Pre-configured variables",
      config: {
        dataset: "ds"
      }
    },
    {
      name: "title",
      type: "string",
      label: "Title",
      category: "Settings"
    },
    {
      name: "allowNoValue",
      type: "boolean",
      label: "Allow no value",
      category: "Settings",
      defaultValue: false
    }
  ],
  events: [
    {
      name: "onChange",
      label: "Change",
      properties: [
        {
          name: "value",
          type: "measure"
        }
      ]
    }
  ],
  variables: [
    {
      name: "Measure choice",
      type: "measure",
      inputs: ["defaultValue"],
      events: [{ name: "onChange", property: "value" }]
    }
  ]
}, v = defineComponent(d, c, {
  props: (e, [a]) => e.ds ? {
    ...e,
    options: e.options || []
  } : {
    ...e,
    options: []
  },
  events: {
    onChange: (e) => ({
      value: e || ee.noFilter()
    })
  }
});
export {
  v as default,
  c as meta
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VsZWN0b3JNZWFzdXJlLUIzcWJXZ3Z0LmpzIiwic291cmNlcyI6WyIvVXNlcnMvY2hyaXN0b3BoZXJjYXJsc29uL2ZsdWlkL2Ryb3BsZXQtZW1iZWRkYWJsZS9hcHAvZnJvbnRlbmQvZW1iZWRkYWJsZS9ub2RlX21vZHVsZXMvQGVtYmVkZGFibGUuY29tL3ZhbmlsbGEtY29tcG9uZW50cy9kaXN0L1NlbGVjdG9yTWVhc3VyZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWIGFzIGwgfSBmcm9tIFwiLi9pbmRleC5lc20tSkFoX0sxVkcuanNcIjtcbmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCBhcyBzIH0gZnJvbSBcIkBlbWJlZGRhYmxlLmNvbS9yZWFjdFwiO1xuaW1wb3J0IHsgaiBhcyByIH0gZnJvbSBcIi4vanN4LXJ1bnRpbWUtQ2pRWGFTcVEuanNcIjtcbmltcG9ydCB7IFMgYXMgaSB9IGZyb20gXCIuL1NlbGVjdG9yLUNDaDZHUmxGLmpzXCI7XG5pbXBvcnQgeyBiIGFzIHUsIGEgYXMgbSB9IGZyb20gXCIuL1NlbGVjdG9yLnV0aWxzLWNFSVlFdUtuLmpzXCI7XG5jb25zdCBkID0gKGUpID0+IHtcbiAgY29uc3QgYSA9ICh0KSA9PiB7XG4gICAgY29uc3QgbiA9IGUub3B0aW9ucy5maW5kKChvKSA9PiBvLm5hbWUgPT09IHQpO1xuICAgIGUub25DaGFuZ2Uobik7XG4gIH07XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gci5qc3goXG4gICAgaSxcbiAgICB7XG4gICAgICB0aXRsZTogZS50aXRsZSxcbiAgICAgIG9wdGlvbnM6IG0oZS5vcHRpb25zKSxcbiAgICAgIGRlZmF1bHRWYWx1ZTogdShlLmRlZmF1bHRWYWx1ZSwgZS5vcHRpb25zKSxcbiAgICAgIHVuY2xlYXJhYmxlOiAhZS5hbGxvd05vVmFsdWUsXG4gICAgICBvbkNoYW5nZTogYVxuICAgIH1cbiAgKTtcbn0sIGMgPSB7XG4gIG5hbWU6IFwiU2VsZWN0b3JNZWFzdXJlXCIsXG4gIGxhYmVsOiBcIk1lYXN1cmVzIHNpbmdsZS1zZWxlY3RcIixcbiAgZGVmYXVsdFdpZHRoOiAzMDAsXG4gIGRlZmF1bHRIZWlnaHQ6IDgwLFxuICBjbGFzc05hbWVzOiBbXCJvbi10b3BcIl0sXG4gIGNhdGVnb3J5OiBcIkNvbnRyb2xzOiBtZWFzdXJlcyBhbmQgZGltZW5zaW9uc1wiLFxuICBpbnB1dHM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcImRzXCIsXG4gICAgICB0eXBlOiBcImRhdGFzZXRcIixcbiAgICAgIGxhYmVsOiBcIkRhdGFzZXRcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkRhdGFzZXRcIixcbiAgICAgIGNhdGVnb3J5OiBcIkRyb3Bkb3duIHZhbHVlc1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBcIm9wdGlvbnNcIixcbiAgICAgIGFycmF5OiAhMCxcbiAgICAgIHR5cGU6IFwibWVhc3VyZVwiLFxuICAgICAgbGFiZWw6IFwiQ2hvaWNlc1wiLFxuICAgICAgY29uZmlnOiB7XG4gICAgICAgIGRhdGFzZXQ6IFwiZHNcIlxuICAgICAgfSxcbiAgICAgIGNhdGVnb3J5OiBcIkRyb3Bkb3duIHZhbHVlc1wiLFxuICAgICAgaW5wdXRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIm92ZXJyaWRlTmFtZVwiLFxuICAgICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgICAgbGFiZWw6IFwiT3ZlcnJpZGUgbmFtZVwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIk92ZXJyaWRlcyB0aGUgZGVmYXVsdCBuYW1lIHNob3duXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogXCJkZWZhdWx0VmFsdWVcIixcbiAgICAgIHR5cGU6IFwibWVhc3VyZVwiLFxuICAgICAgbGFiZWw6IFwiRGVmYXVsdCB2YWx1ZVwiLFxuICAgICAgY2F0ZWdvcnk6IFwiUHJlLWNvbmZpZ3VyZWQgdmFyaWFibGVzXCIsXG4gICAgICBjb25maWc6IHtcbiAgICAgICAgZGF0YXNldDogXCJkc1wiXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBcInRpdGxlXCIsXG4gICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgICAgbGFiZWw6IFwiVGl0bGVcIixcbiAgICAgIGNhdGVnb3J5OiBcIlNldHRpbmdzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFwiYWxsb3dOb1ZhbHVlXCIsXG4gICAgICB0eXBlOiBcImJvb2xlYW5cIixcbiAgICAgIGxhYmVsOiBcIkFsbG93IG5vIHZhbHVlXCIsXG4gICAgICBjYXRlZ29yeTogXCJTZXR0aW5nc1wiLFxuICAgICAgZGVmYXVsdFZhbHVlOiAhMVxuICAgIH1cbiAgXSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJvbkNoYW5nZVwiLFxuICAgICAgbGFiZWw6IFwiQ2hhbmdlXCIsXG4gICAgICBwcm9wZXJ0aWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcInZhbHVlXCIsXG4gICAgICAgICAgdHlwZTogXCJtZWFzdXJlXCJcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgXSxcbiAgdmFyaWFibGVzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJNZWFzdXJlIGNob2ljZVwiLFxuICAgICAgdHlwZTogXCJtZWFzdXJlXCIsXG4gICAgICBpbnB1dHM6IFtcImRlZmF1bHRWYWx1ZVwiXSxcbiAgICAgIGV2ZW50czogW3sgbmFtZTogXCJvbkNoYW5nZVwiLCBwcm9wZXJ0eTogXCJ2YWx1ZVwiIH1dXG4gICAgfVxuICBdXG59LCB2ID0gcyhkLCBjLCB7XG4gIHByb3BzOiAoZSwgW2FdKSA9PiBlLmRzID8ge1xuICAgIC4uLmUsXG4gICAgb3B0aW9uczogZS5vcHRpb25zIHx8IFtdXG4gIH0gOiB7XG4gICAgLi4uZSxcbiAgICBvcHRpb25zOiBbXVxuICB9LFxuICBldmVudHM6IHtcbiAgICBvbkNoYW5nZTogKGUpID0+ICh7XG4gICAgICB2YWx1ZTogZSB8fCBsLm5vRmlsdGVyKClcbiAgICB9KVxuICB9XG59KTtcbmV4cG9ydCB7XG4gIHYgYXMgZGVmYXVsdCxcbiAgYyBhcyBtZXRhXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VsZWN0b3JNZWFzdXJlLmpzLm1hcFxuIl0sIm5hbWVzIjpbIm4iLCJyIiwiaSIsIm0iLCJ1IiwicyIsImwiXSwibWFwcGluZ3MiOiI7Ozs7O0FBS0ssTUFBQyxJQUFJLENBQUMsTUFBTTtBQUNmLFFBQU0sSUFBSSxDQUFDLE1BQU07QUFDZixVQUFNQSxLQUFJLEVBQUUsUUFBUSxLQUFLLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQztBQUM1QyxNQUFFLFNBQVNBLEVBQUM7QUFBQSxFQUNkO0FBQ0EsU0FBdUJDLGtCQUFFO0FBQUEsSUFDdkJDO0FBQUFBLElBQ0E7QUFBQSxNQUNFLE9BQU8sRUFBRTtBQUFBLE1BQ1QsU0FBU0MsRUFBRSxFQUFFLE9BQU87QUFBQSxNQUNwQixjQUFjQyxFQUFFLEVBQUUsY0FBYyxFQUFFLE9BQU87QUFBQSxNQUN6QyxhQUFhLENBQUMsRUFBRTtBQUFBLE1BQ2hCLFVBQVU7QUFBQSxJQUNoQjtBQUFBLEVBQ0E7QUFDQSxHQUFHLElBQUk7QUFBQSxFQUNMLE1BQU07QUFBQSxFQUNOLE9BQU87QUFBQSxFQUNQLGNBQWM7QUFBQSxFQUNkLGVBQWU7QUFBQSxFQUNmLFlBQVksQ0FBQyxRQUFRO0FBQUEsRUFDckIsVUFBVTtBQUFBLEVBQ1YsUUFBUTtBQUFBLElBQ047QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLGFBQWE7QUFBQSxNQUNiLFVBQVU7QUFBQSxJQUNoQjtBQUFBLElBQ0k7QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFFBQVE7QUFBQSxRQUNOLFNBQVM7QUFBQSxNQUNqQjtBQUFBLE1BQ00sVUFBVTtBQUFBLE1BQ1YsUUFBUTtBQUFBLFFBQ047QUFBQSxVQUNFLE1BQU07QUFBQSxVQUNOLE1BQU07QUFBQSxVQUNOLE9BQU87QUFBQSxVQUNQLGFBQWE7QUFBQSxRQUN2QjtBQUFBLE1BQ0E7QUFBQSxJQUNBO0FBQUEsSUFDSTtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sT0FBTztBQUFBLE1BQ1AsVUFBVTtBQUFBLE1BQ1YsUUFBUTtBQUFBLFFBQ04sU0FBUztBQUFBLE1BQ2pCO0FBQUEsSUFDQTtBQUFBLElBQ0k7QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxJQUNoQjtBQUFBLElBQ0k7QUFBQSxNQUNFLE1BQU07QUFBQSxNQUNOLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxNQUNWLGNBQWM7QUFBQSxJQUNwQjtBQUFBLEVBQ0E7QUFBQSxFQUNFLFFBQVE7QUFBQSxJQUNOO0FBQUEsTUFDRSxNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxZQUFZO0FBQUEsUUFDVjtBQUFBLFVBQ0UsTUFBTTtBQUFBLFVBQ04sTUFBTTtBQUFBLFFBQ2hCO0FBQUEsTUFDQTtBQUFBLElBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDRSxXQUFXO0FBQUEsSUFDVDtBQUFBLE1BQ0UsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sUUFBUSxDQUFDLGNBQWM7QUFBQSxNQUN2QixRQUFRLENBQUMsRUFBRSxNQUFNLFlBQVksVUFBVSxRQUFPLENBQUU7QUFBQSxJQUN0RDtBQUFBLEVBQ0E7QUFDQSxHQUFHLElBQUlDLGdCQUFFLEdBQUcsR0FBRztBQUFBLEVBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxLQUFLO0FBQUEsSUFDeEIsR0FBRztBQUFBLElBQ0gsU0FBUyxFQUFFLFdBQVcsQ0FBQTtBQUFBLEVBQzFCLElBQU07QUFBQSxJQUNGLEdBQUc7QUFBQSxJQUNILFNBQVMsQ0FBQTtBQUFBLEVBQ2I7QUFBQSxFQUNFLFFBQVE7QUFBQSxJQUNOLFVBQVUsQ0FBQyxPQUFPO0FBQUEsTUFDaEIsT0FBTyxLQUFLQyxHQUFFLFNBQVE7QUFBQSxJQUM1QjtBQUFBLEVBQ0E7QUFDQSxDQUFDOyIsInhfZ29vZ2xlX2lnbm9yZUxpc3QiOlswXX0=
