{"version":3,"file":"StackedBarChart-CnIEvIj5-CACvKcYI.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/StackedBarChart/StackedBarChart.emb.ts"],"sourcesContent":["import { OrderBy, loadData } from '@embeddable.com/core';\nimport { EmbeddedComponentMeta, Inputs, defineComponent } from '@embeddable.com/react';\n\nimport Component from './index';\n\nexport const meta = {\n  name: 'StackedBarChart',\n  label: 'Grouped bar chart',\n  classNames: ['inside-card'],\n  category: 'Charts: essentials',\n  inputs: [\n    {\n      name: 'ds',\n      type: 'dataset',\n      label: 'Dataset to display',\n      category: 'Chart data',\n    },\n    {\n      name: 'xAxis',\n      type: 'dimension',\n      label: 'X-Axis',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'segment',\n      type: 'dimension',\n      label: 'Grouping',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'metric',\n      type: 'measure',\n      label: 'Metric',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'sortBy',\n      type: 'dimensionOrMeasure',\n      label: 'Sort by (optional)',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      label: 'Title',\n      description: 'The title for the chart',\n      category: 'Chart settings',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      label: 'Description',\n      description: 'The description for the chart',\n      category: 'Chart settings',\n    },\n    {\n      name: 'stackBars',\n      type: 'boolean',\n      label: 'Stack bars',\n      defaultValue: true,\n      category: 'Chart settings',\n    },\n    {\n      name: 'showLegend',\n      type: 'boolean',\n      label: 'Show legend',\n      defaultValue: true,\n      category: 'Chart settings',\n    },\n    {\n      name: 'maxSegments',\n      type: 'number',\n      label: 'Max Legend Items',\n      defaultValue: 8,\n      category: 'Chart settings',\n    },\n    {\n      name: 'showLabels',\n      type: 'boolean',\n      label: 'Show Labels',\n      defaultValue: false,\n      category: 'Chart settings',\n    },\n    {\n      name: 'showTotals',\n      type: 'boolean',\n      label: 'Show Totals Above Stacked Bars',\n      defaultValue: false,\n      category: 'Chart settings',\n    },\n    {\n      name: 'displayHorizontally',\n      type: 'boolean',\n      label: 'Display Horizontally',\n      defaultValue: false,\n      category: 'Chart settings',\n    },\n    {\n      name: 'reverseXAxis',\n      type: 'boolean',\n      label: 'Reverse X Axis',\n      category: 'Chart settings',\n      defaultValue: false,\n    },\n    {\n      name: 'displayAsPercentage',\n      type: 'boolean',\n      label: 'Display as Percentages',\n      defaultValue: false,\n      category: 'Chart settings',\n    },\n    {\n      name: 'dps',\n      type: 'number',\n      label: 'Decimal Places',\n      category: 'Formatting',\n    },\n    {\n      name: 'enableDownloadAsCSV',\n      type: 'boolean',\n      label: 'Show download as CSV',\n      category: 'Export options',\n      defaultValue: true,\n    },\n    {\n      name: 'enableDownloadAsPNG',\n      type: 'boolean',\n      label: 'Show download as PNG',\n      category: 'Export options',\n      defaultValue: true,\n    },\n  ],\n} as const satisfies EmbeddedComponentMeta;\n\nexport default defineComponent(Component, meta, {\n  props: (inputs: Inputs<typeof meta>) => {\n    const orderProp: OrderBy[] = [];\n\n    if (inputs.sortBy) {\n      orderProp.push({\n        property: inputs.sortBy,\n        direction: inputs.sortBy.nativeType == 'string' ? 'asc' : 'desc',\n      });\n    }\n\n    return {\n      ...inputs,\n      isGroupedBar: true,\n      results: loadData({\n        from: inputs.ds,\n        select: [inputs.xAxis, inputs.segment, inputs.metric],\n        orderBy: orderProp,\n      }),\n    };\n  },\n});\n"],"names":["orderProp","inputs","loadData","StackedBarChart_emb","defineComponent","Component","meta"],"mappings":"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"}