{"version":3,"file":"DynamicAxisBar-B4q-A_fz-DGYe0bhT.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/DynamicAxisBar/DynamicAxisBar.emb.ts","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/DynamicAxisBar/index.tsx"],"sourcesContent":["import { DimensionOrMeasure, loadData } from '@embeddable.com/core';\nimport { EmbeddedComponentMeta, Inputs, defineComponent } from '@embeddable.com/react';\n\nimport Component, { Props } from './index';\n\nexport const meta = {\n  name: 'DynamicAxisBar',\n  label: 'Dynamic-axis bar chart',\n  classNames: ['inside-card'],\n  category: 'Misc',\n  inputs: [\n    {\n      name: 'ds',\n      type: 'dataset',\n      label: 'Dataset to download from',\n      category: 'Chart data',\n    },\n    {\n      name: 'xAxis',\n      type: 'dimension',\n      label: 'Default X-axis',\n      config: {\n        dataset: 'ds',\n        hideGranularity: true,\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'xAxisOptions',\n      type: 'dimension',\n      array: true,\n      label: 'X-axis options',\n      config: {\n        dataset: 'ds',\n        hideGranularity: true,\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'metrics',\n      type: 'measure',\n      array: true,\n      label: 'Metrics',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n    },\n    {\n      name: 'granularity',\n      type: 'granularity',\n      label: 'Granularity (for dates)',\n      defaultValue: 'week',\n      category: 'Variables to configure',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      label: 'Title',\n      description: 'The title for the button',\n      category: 'Chart settings',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      label: 'Description',\n      description: 'The description for the button',\n      category: 'Chart settings',\n    },\n    {\n      name: 'showLegend',\n      type: 'boolean',\n      label: 'Show Legend',\n      category: 'Chart settings',\n      defaultValue: true,\n    },\n    {\n      name: 'showLabels',\n      type: 'boolean',\n      label: 'Show Labels',\n      category: 'Chart settings',\n      defaultValue: false,\n    },\n    {\n      name: 'displayHorizontally',\n      type: 'boolean',\n      label: 'Display Horizontally',\n      category: 'Chart settings',\n      defaultValue: false,\n    },\n    {\n      name: 'reverseXAxis',\n      type: 'boolean',\n      label: 'Reverse X Axis',\n      category: 'Chart settings',\n      defaultValue: false,\n    },\n    {\n      name: 'dps',\n      type: 'number',\n      label: 'Decimal Places',\n      category: 'Formatting',\n    },\n    {\n      name: 'enableDownloadAsPNG',\n      type: 'boolean',\n      label: 'Show download as PNG',\n      category: 'Export options',\n      defaultValue: true,\n    },\n    {\n      name: 'enableDownloadAsCSV',\n      type: 'boolean',\n      label: 'Show download as CSV',\n      category: 'Export options',\n      defaultValue: true,\n    },\n  ],\n} as const satisfies EmbeddedComponentMeta;\n\ntype EmbeddableState = {\n  page: number;\n  dimension?: {\n    title: string;\n    nativeType: 'string' | 'number' | 'boolean' | 'time';\n    name: string;\n    __type__: 'dimension';\n  };\n};\n\nexport default defineComponent<Props, typeof meta, EmbeddableState>(Component, meta, {\n  props: (inputs: Inputs<typeof meta>, [embState]) => {\n    const selectedDimension: DimensionOrMeasure = embState?.dimension?.title\n      ? embState.dimension\n      : inputs.xAxis;\n\n    const isTimeDimension = selectedDimension.nativeType === 'time';\n\n    return {\n      ...inputs,\n      reverseXAxis: inputs.reverseXAxis || isTimeDimension,\n      results: isTimeDimension\n        ? loadData({\n            from: inputs.ds,\n            select: [\n              {\n                dimension: selectedDimension.name,\n                granularity: inputs.granularity,\n              },\n              inputs.metrics,\n            ],\n            orderBy: [\n              {\n                property: selectedDimension,\n                direction: 'desc',\n              },\n            ],\n            limit: 100,\n          })\n        : loadData({\n            from: inputs.ds,\n            select: [selectedDimension, inputs.metrics],\n            orderBy: [\n              {\n                property: inputs.metrics[0],\n                direction: 'desc',\n              },\n            ],\n            limit: 100,\n          }),\n    };\n  },\n});\n","import { DataResponse, Dimension, Granularity, Measure } from '@embeddable.com/core';\nimport { useEmbeddableState, useTheme } from '@embeddable.com/react';\nimport React, { useEffect, useState } from 'react';\n\nimport Container from '../../Container';\nimport BarChart from '../BarChart/components/BarChart';\nimport { Theme } from '../../../../themes/theme';\nimport formatValue from '../../../util/format';\n\nexport type Props = {\n  description?: string;\n  displayHorizontally?: boolean;\n  dps?: number;\n  enableDownloadAsCSV?: boolean;\n  granularity?: Granularity;\n  metrics: Measure[];\n  results: DataResponse;\n  reverseXAxis?: boolean;\n  showLabels?: boolean;\n  showLegend?: boolean;\n  title?: string;\n  xAxis: Dimension;\n  xAxisOptions?: Dimension[];\n  theme?: Theme;\n};\n\nexport default (props: Props) => {\n  const { results } = props;\n\n  const [value, setValue] = useState(props.xAxis.name);\n  const [_, setDimension] = useEmbeddableState({ dimension: null }) as [\n    { dimension: Dimension | null },\n    (d: { dimension: Dimension | null }) => void,\n  ];\n\n  const theme: Theme = useTheme() as Theme;\n\n  const xAxisOptions = props.xAxisOptions?.find((item) => props.xAxis.name === item.name)\n    ? props.xAxisOptions\n    : [...(props.xAxisOptions || []), props.xAxis];\n\n  const handleChange = (newValue: string) => {\n    setValue(newValue);\n    const selectedDimension = xAxisOptions.find((item) => newValue === item.name) || null;\n    setDimension({ dimension: selectedDimension });\n  };\n\n  const xAxis = xAxisOptions.find((item) => value === item.name);\n  let dateFormat: string | undefined;\n  if (xAxis?.nativeType === 'time' && props.granularity && props.granularity in theme.dateFormats) {\n    dateFormat = theme.dateFormats[props.granularity];\n  }\n  const updatedProps = {\n    ...props,\n    theme,\n    xAxis: xAxis ? xAxis : props.xAxis,\n  };\n  const mappedData = results?.data?.map((d) => ({\n    ...d,\n    ...(xAxis?.name && {\n      [xAxis.name]: dateFormat\n        ? formatValue(d?.[xAxis.name], {\n            meta: xAxis?.meta,\n            dateFormat,\n          })\n        : d?.[xAxis.name],\n    }),\n  })) ?? [];\n\n  return (\n    <Container {...props} className=\"overflow-y-hidden\">\n      <div className=\"flex h-[60px] w-full\">\n        <div>\n          <select\n            className={`\n              border\n              flex\n              h-10\n              items-center\n              min-w-[50px]\n              px-3\n              relative\n              w-full\n              border-[color:--embeddable-controls-borders-colors-normal]\n              rounded-[--embeddable-controls-borders-radius]\n            `}\n            value={value}\n            onChange={(e) => handleChange(e.target.value)}\n          >\n            {xAxisOptions?.map((o, i) => (\n              <option key={i} value={o.name}>\n                {o.title}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"flex grow overflow-hidden\">\n        {results.isLoading ||\n        !xAxis ||\n        !mappedData?.filter((_, i) => i < 10)?.some((row) => row[xAxis.name]) ? null : (\n          <BarChart key={value} {...updatedProps} results={{ ...results, data: mappedData }} />\n        )}\n      </div>\n    </Container>\n  );\n};\n"],"names":["inputs","selectedDimension","loadData","isTimeDimension","_a","embState","DynamicAxisBar_emb","defineComponent","Component","meta","results","xAxis","_c","mappedData","_","row","BarChart","updatedProps","value","xAxisOptions","o","jsx","e","handleChange","jsxs","Container","props","dateFormat","d","formatValue","_b","theme","item","setDimension","newValue","setValue","useState","useEmbeddableState","useTheme"],"mappings":"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"}