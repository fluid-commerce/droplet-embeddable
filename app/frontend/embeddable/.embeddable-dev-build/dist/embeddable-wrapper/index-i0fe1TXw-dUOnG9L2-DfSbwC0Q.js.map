{"version":3,"file":"index-i0fe1TXw-dUOnG9L2-DfSbwC0Q.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/BarChart/index.tsx"],"sourcesContent":["import { DataResponse, Dimension, Granularity, Measure } from '@embeddable.com/core';\nimport { useTheme } from '@embeddable.com/react';\nimport React, { useMemo } from 'react';\n\nimport useTimeseries from '../../../hooks/useTimeseries';\nimport Container from '../../Container';\nimport BarChart from './components/BarChart';\nimport { Theme } from '../../../../themes/theme';\nimport formatValue from '../../../util/format';\n\nexport type Props = {\n  clientContext?: any;\n  description?: string;\n  displayHorizontally?: boolean;\n  dps?: number;\n  enableDownloadAsCSV?: boolean;\n  granularity?: Granularity;\n  isTSBarChart?: boolean;\n  limit?: number;\n  metrics: Measure[];\n  lineMetrics?: Measure[];\n  results: DataResponse;\n  reverseXAxis?: boolean;\n  showLabels?: boolean;\n  showLegend?: boolean;\n  sortBy?: Dimension | Measure;\n  stackMetrics?: boolean;\n  title?: string;\n  xAxis: Dimension;\n  xAxisTitle?: string;\n  yAxisTitle?: string;\n  showSecondYAxis?: boolean;\n  secondAxisTitle?: string;\n  theme?: Theme;\n};\n\ntype PropsWithRequiredtheme = Props & { theme: Theme };\n\nexport default (props: Props): React.JSX.Element => {\n  const theme: Theme = useTheme() as Theme;\n\n  //add missing dates to time-series barcharts\n  const { fillGaps } = useTimeseries(props, 'desc');\n  const { results, isTSBarChart } = props;\n\n  // Create mapped data with proper date formatting for time-series bar charts\n  const mappedData = useMemo(() => {\n    if (!isTSBarChart) return results?.data;\n    \n    const filledData = results?.data?.reduce(fillGaps, []);\n    let dateFormat: string | undefined;\n    if (props.xAxis?.nativeType === 'time' && props.granularity && props.granularity in theme.dateFormats) {\n      dateFormat = theme.dateFormats[props.granularity as keyof typeof theme.dateFormats];\n    }\n    \n    return filledData?.map((d) => ({\n      ...d,\n      ...(props.xAxis?.name && {\n        [props.xAxis.name]: dateFormat\n          ? formatValue(d?.[props.xAxis.name], {\n              meta: props.xAxis?.meta,\n              dateFormat,\n            })\n          : d?.[props.xAxis.name],\n      }),\n    })) ?? [];\n  }, [isTSBarChart, results?.data, fillGaps, props.xAxis, props.granularity, theme]);\n\n  // Update props with theme and mapped data\n  const updatedProps: PropsWithRequiredtheme = {\n    ...props,\n    theme,\n    results: { ...props.results, data: mappedData },\n  };\n\n  return (\n    <Container {...props} className=\"overflow-y-hidden\">\n      <BarChart {...updatedProps} />\n    </Container>\n  );\n};\n"],"names":["jsx","Container","props","BarChart","updatedProps","theme","mappedData","isTSBarChart","results","fillGaps","dateFormat","d","_b","formatValue","_a","filledData","useTheme","useTimeseries","useMemo","Component"],"mappings":"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"}