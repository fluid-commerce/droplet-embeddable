{"version":3,"file":"index-BjLADGiF-zeK9Ivw1-CRZm6DvK.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/StackedBarChart/index.tsx"],"sourcesContent":["import {\n  BarElement,\n  CategoryScale,\n  ChartData,\n  Chart as ChartJS,\n  Filler,\n  Legend,\n  LinearScale,\n  PointElement,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nimport useTimeseries from '../../../hooks/useTimeseries';\nimport getBarChartOptions from '../../../util/getBarChartOptions';\nimport getStackedChartData, {\n  Props,\n  PropsWithRequiredTheme,\n} from '../../../util/getStackedChartData';\nimport Container from '../../Container';\nimport { Theme } from '../../../../themes/theme';\nimport { useTheme } from '@embeddable.com/react';\nimport { setChartJSDefaults } from '../../../util/chartjs/common';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ChartDataLabels,\n);\n\ntype Totals = {\n  [xAxis: string]: {\n    total: number;\n    lastSegment: number | null;\n  };\n};\n\nexport default (props: Props) => {\n  // Get theme for use in component\n  const theme: Theme = useTheme() as Theme;\n\n  setChartJSDefaults(theme);\n\n  const datasetsMeta = {\n    barPercentage: 0.6,\n    barThickness: 'flex',\n    maxBarThickness: 25,\n    minBarLength: 0,\n    borderRadius: 3,\n  };\n\n  //add missing dates to time-series stacked barcharts\n  const { fillGaps } = useTimeseries(props, 'desc');\n  const { results, isTSGroupedBarChart } = props;\n  const updatedProps: PropsWithRequiredTheme = {\n    ...props,\n    results: isTSGroupedBarChart\n      ? { ...props.results, data: results?.data?.reduce(fillGaps, []) }\n      : props.results,\n    theme,\n  };\n\n  if (props.showTotals) {\n    const totals: Totals = {};\n    const { data } = props.results;\n    const { metric, xAxis, segment } = props;\n    if (data && data.length > 0) {\n      data?.forEach((d: { [key: string]: any }) => {\n        const x = d[xAxis.name];\n        const y = parseFloat(d[metric.name]);\n        if (totals[x]) {\n          totals[x].total += y;\n          totals[x].lastSegment = null;\n        } else {\n          totals[x] = {\n            total: y,\n            lastSegment: null, // we'll fill this in later\n          };\n        }\n      });\n      updatedProps.totals = totals;\n    }\n  }\n\n  return (\n    <Container {...props} className=\"overflow-y-hidden\">\n      <Bar\n        height=\"100%\"\n        options={getBarChartOptions({ ...updatedProps, stacked: props.stackBars, theme })}\n        data={\n          getStackedChartData(updatedProps, datasetsMeta) as ChartData<'bar', number[], unknown>\n        }\n      />\n    </Container>\n  );\n};\n"],"names":["getStackedChartData","updatedProps","datasetsMeta","getBarChartOptions","props","theme","Bar","jsx","Container","totals","y","x","d","xAxis","metric","data","segment","isTSGroupedBarChart","_a","results","fillGaps","useTimeseries","setChartJSDefaults","b","useTheme","Component","Filler","ChartDataLabels","Legend","Tooltip","Title","j","BarElement","T","PointElement","S","LinearScale","B","CategoryScale","C","ChartJS"],"mappings":"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"}