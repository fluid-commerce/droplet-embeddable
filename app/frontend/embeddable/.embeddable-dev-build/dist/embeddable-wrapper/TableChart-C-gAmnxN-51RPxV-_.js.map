{"version":3,"file":"TableChart-C-gAmnxN-51RPxV-_.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/TableChart/TableChart.emb.ts","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/TableChart/index.tsx","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/TableChart/components/TableHead.tsx","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/TableChart/components/Pagination.tsx"],"sourcesContent":["import {\n  Dimension,\n  Measure,\n  OrderBy,\n  isDimension,\n  isMeasure,\n  loadData,\n} from '@embeddable.com/core';\nimport { EmbeddedComponentMeta, Inputs, defineComponent } from '@embeddable.com/react';\n\nimport SortDirectionType from '../../../../types/SortDirection.type.emb';\nimport Component, { Props } from './index';\n\nexport const meta = {\n  name: 'TableChart',\n  label: 'Table',\n  defaultHeight: 300,\n  defaultWidth: 900,\n  classNames: ['inside-card'],\n  category: 'Charts: essentials',\n  inputs: [\n    {\n      name: 'ds',\n      type: 'dataset',\n      label: 'Dataset to display',\n      description: 'Dataset',\n      defaultValue: false,\n      category: 'Chart data',\n    },\n    {\n      name: 'columns',\n      type: 'dimensionOrMeasure',\n      label: 'Columns',\n      array: true,\n      required: true,\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Chart data',\n      inputs: [\n        {\n          name: 'customColumnLabel',\n          type: 'string',\n          label: 'Column Header',\n          description: 'Custom label to display instead of the default column header',\n        },\n      ],\n    },\n    // Chart settings\n    {\n      name: 'title',\n      type: 'string',\n      label: 'Title',\n      category: 'Chart settings',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      label: 'Description',\n      description: 'The description for the chart',\n      category: 'Chart settings',\n    },\n    {\n      name: 'maxPageRows',\n      type: 'number',\n      label: 'Max Page Rows',\n      category: 'Chart settings',\n    },\n    {\n      name: 'defaultSort',\n      type: 'dimensionOrMeasure',\n      config: {\n        dataset: 'ds',\n      },\n      label: 'Default Sort',\n      category: 'Chart settings',\n    },\n    {\n      name: 'defaultSortDirection',\n      type: SortDirectionType as never,\n      defaultValue: 'Ascending',\n      label: 'Default Sort Direction',\n      category: 'Chart settings',\n    },\n    {\n      name: 'enableDownloadAsCSV',\n      type: 'boolean',\n      label: 'Show download as CSV',\n      category: 'Export options',\n      defaultValue: true,\n    },\n    {\n      name: 'enableDownloadAsPNG',\n      type: 'boolean',\n      label: 'Show download as PNG',\n      category: 'Export options',\n      defaultValue: true,\n    },\n    // Table styling\n    {\n      name: 'minColumnWidth',\n      type: 'number',\n      label: 'Minimum column width in pixels',\n      defaultValue: 150,\n      category: 'Chart styling',\n    },\n    {\n      name: 'fontSize',\n      type: 'number',\n      label: 'Font size in pixels',\n      category: 'Chart styling',\n    },\n  ],\n} as const satisfies EmbeddedComponentMeta;\n\nexport default defineComponent<\n  Props,\n  typeof meta,\n  {\n    downloadAll: boolean;\n    maxRowsFit: number;\n    page: number;\n    prevVariableValues: Record<string, any>;\n    sort: OrderBy[];\n  }\n>(Component, meta, {\n  props: (inputs: Inputs<typeof meta>, [state]) => {\n    const currVariableValues = inputs?.ds?.variableValues || {};\n    const prevVariableValues = state?.prevVariableValues || {};\n\n    const limit =\n      inputs.maxPageRows || state?.maxRowsFit\n        ? Math.min(inputs.maxPageRows || 1000, Math.max(state?.maxRowsFit, 1) || 1000)\n        : 0;\n\n    const defaultSortDirection =\n      // @ts-expect-error - defaultSortDirection.value is added by defineComponent.\n      inputs.defaultSortDirection?.value === 'Ascending' ? 'asc' : 'desc';\n\n    const defaultSort =\n      inputs.columns\n        ?.filter((c) => c.name !== inputs.defaultSort?.name)\n        .map((property) => ({\n          property,\n          direction: defaultSortDirection,\n        })) || [];\n\n    if (inputs.defaultSort) {\n      defaultSort.unshift({\n        property: inputs.defaultSort,\n        direction: defaultSortDirection,\n      });\n    }\n\n    // Deep compare the variable values to determine if the dataset has changed\n    if (state && JSON.stringify(currVariableValues) !== JSON.stringify(prevVariableValues)) {\n      state.prevVariableValues = currVariableValues;\n      state.page = 0;\n    }\n\n    // Results are per page - no need to get the entire dataset to show one page\n    const results =\n      limit < 1\n        ? { isLoading: true }\n        : loadData({\n            from: inputs.ds,\n            select: inputs.columns,\n            limit,\n            offset: limit * (state?.page || 0),\n            orderBy: state?.sort || defaultSort,\n          });\n\n    // All results get loaded when the download all button is clicked (otherwise they return empty)\n    const allResults = loadData({\n      from: inputs.ds,\n      select: inputs.columns,\n      limit: state?.downloadAll ? 10_000 : 0,\n      offset: 0,\n      orderBy: state?.sort || defaultSort,\n    });\n\n    return {\n      ...inputs,\n      limit,\n      defaultSort,\n      results,\n      allResults,\n    };\n  },\n});\n","import { DataResponse, DimensionOrMeasure, OrderBy, OrderDirection } from '@embeddable.com/core';\nimport { useEmbeddableState, useTheme } from '@embeddable.com/react';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport Container from '../../Container';\nimport Pagination from './components/Pagination';\nimport TableHead from './components/TableHead';\nimport downloadAsCSV from '../../../util/downloadAsCSV';\nimport formatValue, { detectAndReturnLinks } from '../../../util/format';\nimport { SortDirection } from '../../../../enums/SortDirection';\nimport { Theme } from '../../../../themes/theme';\n\nexport type Props = {\n  allResults?: DataResponse;\n  columns: DimensionOrMeasure[];\n  defaultSort?: { property: DimensionOrMeasure; direction: string }[];\n  fontSize?: number;\n  limit?: number;\n  minColumnWidth?: number;\n  results: DataResponse;\n  title: string;\n};\n\ntype Meta = {\n  downloadAll: boolean;\n  maxRowsFit: number;\n  page: number;\n  prevVariableValues: Record<string, any>;\n  sort: OrderBy[];\n};\n\nexport default (props: Props) => {\n  const { columns, results, allResults } = props;\n  const [isDownloadingAll, setIsDownloadingAll] = useState(false);\n  const [maxRowsFit, setMaxRowFit] = useState(0);\n  const [resizing, setResizing] = useState(false);\n\n  const theme: Theme = useTheme() as Theme;\n\n  const [meta, setMeta] = useEmbeddableState({\n    downloadAll: false,\n    maxRowsFit: 0,\n    page: 0,\n    prevVariableValues: {},\n    sort: props.defaultSort,\n  }) as [Meta, (f: (m: Meta) => Meta) => void];\n\n  useEffect(() => {\n    if (!resizing) {\n      setMeta((meta) => ({ ...meta, maxRowsFit }));\n    }\n  }, [props.columns, maxRowsFit, setMeta, resizing]);\n\n  // Catch \"download all as csv\" events\n  useEffect(() => {\n    if (isDownloadingAll) {\n      if (!allResults || !allResults.data || allResults.data.length === 0) {\n        // We haven't finished the loadData yet, so hang on\n        return;\n      }\n      downloadAsCSV(props, allResults?.data, [], 'downloaded-chart-data');\n      setIsDownloadingAll(false);\n      setMeta((meta) => ({ ...meta, downloadAll: false }));\n    }\n  }, [allResults, isDownloadingAll, props, setMeta]);\n\n  const calculateMaxRowFit = useCallback(\n    ({ height }: { height: number }) => {\n      let val = 0;\n\n      const heightWithoutHead = (height || 76) - 76;\n      const newMaxRowsFit = Math.floor(heightWithoutHead / 44);\n\n      if (\n        (maxRowsFit === newMaxRowsFit && newMaxRowsFit === val) ||\n        props.results?.data?.length === 0\n      ) {\n        return;\n      }\n      setMaxRowFit((val = newMaxRowsFit));\n    },\n    [maxRowsFit, props.results],\n  );\n\n  // We pass this to the download menu via the container\n  const handleDownloadAll = useCallback(() => {\n    setMeta((meta) => ({ ...meta, downloadAll: true }));\n    setIsDownloadingAll(true);\n  }, [setMeta]);\n\n  const updateSort = useCallback(\n    (column: DimensionOrMeasure) => {\n      if (!meta) return;\n\n      const sort: OrderBy[] = meta.sort?.slice() || [];\n      const invert = { asc: 'desc', desc: 'asc' };\n      const index = sort.findIndex((c) => c.property.name === column.name);\n\n      if (index === 0) {\n        sort[0] = { ...sort[0], direction: invert[sort[0].direction] as OrderDirection };\n      } else {\n        const [newOrder] = sort.splice(index, 1);\n        sort.unshift(newOrder);\n      }\n\n      setMeta((meta) => ({ ...meta, sort, page: 0 }));\n    },\n    [meta, setMeta],\n  );\n\n  return (\n    <Container\n      {...props}\n      childContainerClassName=\"overflow-x-auto\"\n      className=\"overflow-y-auto\"\n      downloadAllFunction={handleDownloadAll}\n      onResize={calculateMaxRowFit}\n      setResizeState={(value) => setResizing(value)}\n    >\n      <div style={{ minWidth: `${columns?.length * (props.minColumnWidth ?? 100)}px` }}>\n        {!!meta && !(props.results?.isLoading && !props.results?.data?.length) && (\n          <table\n            className=\"overflow-visible w-full\"\n            style={{ fontSize: props.fontSize ? `${props.fontSize}px` : theme.font.size }}\n          >\n            <TableHead\n              columns={columns}\n              sortBy={meta?.sort?.[0]?.property}\n              sortDirection={\n                meta?.sort?.[0]?.direction === 'asc'\n                  ? SortDirection.ASCENDING\n                  : SortDirection.DESCENDING\n              }\n              onSortingChange={updateSort}\n              minColumnWidth={props.minColumnWidth ? props.minColumnWidth : undefined}\n            />\n\n            <tbody>\n              {results?.data?.slice(0, maxRowsFit).map((row, index) => (\n                <tr key={index} className=\"hover:bg-gray-400/5\">\n                  {columns.map((column, index) => {\n                    const formattedValue = formatColumn(row[column.name], column);\n                    let title = '';\n                    if (typeof formattedValue === 'object') {\n                      // It's a link, so we just want the link text as the title\n                      title = (formattedValue as React.ReactElement).props.children;\n                    } else {\n                      title = formattedValue;\n                    }\n                    return (\n                      <td\n                        key={index}\n                        className=\"text-dark p-3 truncate\"\n                        style={{\n                          fontSize: props.fontSize ? `${props.fontSize}px` : theme.font.size,\n                          maxWidth: props.minColumnWidth\n                            ? `${props.minColumnWidth * 1.2}px`\n                            : 'auto',\n                        }}\n                      >\n                        <span title={title}>{formattedValue}</span>\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      <Pagination\n        currentPage={meta?.page || 0}\n        hasNextPage={\n          props.limit && results?.data?.length ? results?.data?.length < props.limit : false\n        }\n        onPageChange={(page) => {\n          setMeta((meta) => ({ ...meta, page: page }));\n        }}\n      />\n    </Container>\n  );\n};\n\nfunction formatColumn(text: string | number | boolean, column: DimensionOrMeasure) {\n  if (typeof text === 'number' || column.nativeType === 'number') {\n    return formatValue(`${text}`, { type: 'number', meta: column?.meta });\n  }\n  if (typeof text === 'boolean') {\n    // don't use formatValue for booleans, just return the string representation\n    return text ? 'True' : 'False';\n  }\n\n  if (text && column.nativeType === 'time') return formatValue(text, 'date');\n\n  // detect links - we can't do this in the format function because it returns a dom element\n  const { linkText, linkUrl } = detectAndReturnLinks(text);\n  if (linkText && linkUrl) {\n    return (\n      <a href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {linkText}\n      </a>\n    );\n  }\n\n  return formatValue(text);\n}\n","import React from 'react';\nimport { SortDirection } from '../../../../../enums/SortDirection';\nimport { SortDown, SortUp } from '../../../icons';\nimport { DimensionOrMeasure } from '@embeddable.com/core';\nimport { Theme } from '../../../../../themes/theme';\nimport { useTheme } from '@embeddable.com/react';\n\ntype Props = {\n  columns: DimensionOrMeasure[];\n  sortBy?: DimensionOrMeasure;\n  sortDirection?: SortDirection;\n  onSortingChange?: (column: any, sortDirection: SortDirection) => void;\n  minColumnWidth?: number;\n};\n\nconst TableHead = ({ columns, sortBy, sortDirection, onSortingChange, minColumnWidth }: Props) => {\n  const theme: Theme = useTheme() as Theme;\n\n  return (\n    <thead className={`border-y border-[color:--embeddable-controls-boders-colors-primary]`}>\n      <tr>\n        {columns?.map((column) => {\n          const isSorted = sortBy?.name === column.name;\n          const newSortDirection = isSorted\n            ? sortDirection === SortDirection.ASCENDING\n              ? SortDirection.DESCENDING\n              : SortDirection.ASCENDING\n            : SortDirection.ASCENDING;\n\n          return (\n            <th\n              key={column.name}\n              className={`\n                cursor-pointer\n                p-3\n                select-none\n                bg-[color:--embeddable-controls-backgrounds-colors-soft]\n              `}\n              style={\n                minColumnWidth\n                  ? {\n                      minWidth: `${minColumnWidth}px`,\n                      maxWidth: `${minColumnWidth * 1.2}px`,\n                    }\n                  : {}\n              }\n              onClick={() => onSortingChange?.(column, newSortDirection)}\n            >\n              <div className=\"flex items-center gap-1 hover:text-black\">\n                <span className=\"embeddable-table-header mr-1 truncate\">\n                  {/* Use the label from inputs if available, otherwise use the title */}\n                  {column?.inputs?.customColumnLabel ?? column.title}\n                </span>\n\n                {isSorted ? (\n                  <span className=\"w-3\">\n                    {sortDirection === SortDirection.ASCENDING ? (\n                      <SortUp fill=\"currentcolor\" />\n                    ) : (\n                      <SortDown fill=\"currentcolor\" />\n                    )}\n                  </span>\n                ) : null}\n              </div>\n            </th>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHead;\n","import React from 'react';\n\nimport cn from '../../../../util/cn';\nimport { ChevronLeft, ChevronRight } from '../../../icons';\n\ntype Props = {\n  currentPage: number;\n  hasNextPage: boolean;\n  onPageChange?: (page: number) => void;\n};\n\nconst Pagination = ({ currentPage, hasNextPage, onPageChange }: Props) => {\n  return (\n    <div\n      className={`\n        flex\n        items-center\n        justify-center\n        left-0\n        select-none\n        sticky\n        font-[--embeddable-charts-fontWeights-pagination]\n        text-[color:--embeddable-font-colorNormal]\n        text-[size:--embeddable-font-size]\n      `}\n    >\n      <ChevronLeft\n        className={cn(\n          `\n            border\n            cursor-pointer\n            flex\n            h-8\n            hover:bg-black/10\n            items-center\n            justify-center\n            p-1\n            w-8\n            border-[color:--embeddable-controls-borders-colors-normal]\n            rounded-[--embeddable-controls-borders-radius]\n          `,\n          {\n            'opacity-50 pointer-events-none': currentPage === 0,\n          },\n        )}\n        onClick={() => {\n          onPageChange?.(currentPage - 1);\n        }}\n      />\n\n      <span className=\"mx-4\">Page {currentPage + 1}</span>\n\n      <ChevronRight\n        className={cn(\n          `\n          border\n          cursor-pointer\n          flex\n          h-8\n          hover:bg-black/10\n          items-center\n          justify-center\n          p-1\n          w-8\n          border-[color:--embeddable-controls-borders-colors-normal]\n          rounded-[--embeddable-controls-borders-radius]\n          \n        `,\n          {\n            'opacity-50 pointer-events-none': !hasNextPage,\n          },\n        )}\n        onClick={() => {\n          onPageChange?.(currentPage + 1);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["allResults","results","defaultSort","limit","inputs","state","loadData","defaultSortDirection","currVariableValues","prevVariableValues","property","_a","_c","_b","TableChart_emb","defineComponent","Component","meta","SortDirectionType","J","linkText","linkUrl","formatValue","text","detectAndReturnLinks","column","formatColumn","setMeta","page","props","_i","_j","Pagination","jsx","index","title","formattedValue","theme","row","_h","maxRowsFit","updateSort","_g","_f","SortDirection","columns","_e","_d","TableHead","jsxs","calculateMaxRowFit","value","setResizing","handleDownloadAll","Container","sort","newOrder","invert","c","useCallback","C","setIsDownloadingAll","newMaxRowsFit","val","setMaxRowFit","heightWithoutHead","height","isDownloadingAll","downloadAsCSV","X","resizing","useEffect","F","useState","useTheme","useEmbeddableState","isSorted","sortDirection","SortUp","SortDown","onSortingChange","newSortDirection","minColumnWidth","sortBy","onPageChange","currentPage","hasNextPage","cn","ChevronRight","ChevronLeft"],"mappings":"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"}