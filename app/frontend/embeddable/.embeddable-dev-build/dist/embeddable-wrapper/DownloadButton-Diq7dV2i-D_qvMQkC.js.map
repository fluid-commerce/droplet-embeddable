{"version":3,"file":"DownloadButton-Diq7dV2i-D_qvMQkC.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/DownloadButton/DownloadButton.emb.ts","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/charts/DownloadButton/index.tsx","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/Button.tsx"],"sourcesContent":["import { Dimension, Measure, isDimension, isMeasure, loadData } from '@embeddable.com/core';\nimport { EmbeddedComponentMeta, Inputs, defineComponent } from '@embeddable.com/react';\n\nimport Component, { Props } from './index';\n\nexport const meta = {\n  name: 'DownloadButton',\n  label: 'Download Button',\n  defaultWidth: 200,\n  defaultHeight: 100,\n  category: 'Download options',\n  inputs: [\n    {\n      name: 'ds',\n      type: 'dataset',\n      label: 'Dataset to download from',\n      category: 'Data',\n    },\n    {\n      name: 'columns',\n      type: 'dimensionOrMeasure',\n      array: true,\n      required: true,\n      label: 'Columns to include in download',\n      config: {\n        dataset: 'ds',\n      },\n      category: 'Data',\n    },\n    {\n      name: 'title',\n      type: 'string',\n      label: 'Title',\n      description: 'The title for the button',\n      category: 'Settings',\n    },\n    {\n      name: 'description',\n      type: 'string',\n      label: 'Description',\n      description: 'The description for the button',\n      category: 'Settings',\n    },\n    {\n      name: 'buttonLabel',\n      type: 'string',\n      label: 'Button label',\n      description: 'The text to show on the button',\n      defaultValue: 'Download',\n      category: 'Settings',\n    },\n    {\n      name: 'maxRows',\n      type: 'number',\n      label: 'Maximum number of rows to download',\n      defaultValue: 100,\n      category: 'Settings',\n    },\n  ],\n} as const satisfies EmbeddedComponentMeta;\n\nexport default defineComponent<Props, typeof meta, { downloading: boolean }>(Component, meta, {\n  props: (inputs: Inputs<typeof meta>, [state]) => {\n    const downloading = state?.downloading === true;\n    let results = {\n      isLoading: false,\n    };\n    if (downloading) {\n      results = loadData({\n        from: inputs.ds,\n        select: inputs.columns,\n        limit: inputs.maxRows || undefined,\n      });\n      return {\n        ...inputs,\n        results,\n      };\n    }\n    return {\n      ...inputs,\n    };\n  },\n});\n","import { DataResponse, DimensionOrMeasure } from '@embeddable.com/core';\nimport { useEmbeddableState, useTheme } from '@embeddable.com/react';\nimport React, { useEffect, useState } from 'react';\n\nimport downloadAsCSV from '../../../util/downloadAsCSV';\nimport Button from '../../Button';\nimport Container from '../../Container';\nimport { Theme } from '../../../../themes/theme';\n\ninterface DataResponseWithPrevData extends DataResponse {\n  prevData?: DataResponseData[];\n}\ntype DataResponseData = { [key: string]: any };\n\nexport type Props = {\n  columns: DimensionOrMeasure[];\n  results?: DataResponseWithPrevData;\n  buttonLabel: string;\n};\n\nexport default (props: Props) => {\n  const { results, buttonLabel } = props;\n  const theme: Theme = useTheme() as Theme;\n\n  const [embeddableState, setEmbeddableState] = useEmbeddableState<{\n    downloading: boolean;\n  }>({ downloading: false }) as unknown as [\n    { downloading: boolean },\n    React.Dispatch<React.SetStateAction<{ downloading: boolean }>>,\n  ];\n  const [isPreppingDownload, setIsPreppingDownload] = useState(false);\n  const [mostRecentData, setMostRecentData] = useState<DataResponseData[]>([]);\n\n  // Watch for attempts to download and ensure we have the most recent data\n  useEffect(() => {\n    if (isPreppingDownload) {\n      if (\n        !results ||\n        !results.data ||\n        JSON.stringify(results?.data) === JSON.stringify(mostRecentData)\n      ) {\n        // We haven't finished the loadData yet, so hang on\n        return;\n      }\n      downloadAsCSV(\n        props,\n        results?.data,\n        results?.prevData,\n        'downloaded-chart-data',\n        setIsPreppingDownload,\n      );\n      setMostRecentData(results?.data || []);\n      setIsPreppingDownload(false);\n      setEmbeddableState({ downloading: false });\n    }\n  }, [isPreppingDownload, results, props, setEmbeddableState, mostRecentData]);\n\n  const downloadSVG = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <g clipPath=\"url(#clip0_271_1583)\">\n        <path\n          d=\"M18.6381 16.3934C19.642 16.0066 20.5242 15.5087 21.2192 14.8964C22.0401 14.1733 22.562 13.1801 22.6861 12.105C22.8102 11.0299 22.5278 9.94756 21.8927 9.06283C21.2574 8.1781 20.3133 7.55246 19.2392 7.30435C19.1649 7.28263 19.0986 7.24058 19.048 7.18313C18.9974 7.12569 18.9647 7.05525 18.9536 6.98011C18.8207 5.55336 18.1931 4.21437 17.1752 3.18641C16.1573 2.15846 14.8107 1.50368 13.36 1.33129C11.9093 1.15889 10.4421 1.47929 9.20317 2.23905C7.96425 2.99882 7.02844 4.15202 6.5518 5.50636C6.52028 5.56951 6.47096 5.62248 6.40969 5.65905C6.34842 5.69561 6.27777 5.71421 6.20606 5.71269C5.51514 5.75817 4.8401 5.93662 4.21953 6.23786C3.59894 6.53909 3.04496 6.95722 2.58921 7.46837C1.66876 8.50066 1.2043 9.84916 1.29799 11.2172C1.39168 12.5852 2.03586 13.8607 3.08879 14.7631C3.64641 15.241 4.32746 15.6568 5.09728 16.0085M5.96024 5.71713C7.99888 5.71713 9.82211 7.06087 10.3973 8.2885M12.0004 13.4472V22.6658M8.48186 19.6122C9.55106 20.9781 10.2793 21.6138 11.3646 22.445C11.7486 22.7392 12.2524 22.7392 12.6364 22.445C13.7217 21.6138 14.4499 20.9781 15.5191 19.6122\"\n          stroke={theme.svg.strokeNormal}\n          strokeWidth=\"1.71429\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_271_1583\">\n          <rect width=\"24\" height=\"24\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n\n  return (\n    <Button\n      buttonLabel={buttonLabel}\n      showSpinner={isPreppingDownload}\n      disabled={results?.isLoading || isPreppingDownload}\n      onClick={() => {\n        setEmbeddableState({ downloading: true });\n        setIsPreppingDownload(true);\n      }}\n      icon={downloadSVG}\n    />\n  );\n};\n","import React from 'react';\nimport Spinner from './Spinner';\n\ntype Props = {\n  buttonLabel?: string;\n  showSpinner?: boolean;\n  disabled?: boolean;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  icon?: React.ReactNode;\n};\n\nexport default function Button({ buttonLabel, showSpinner, disabled, onClick, icon }: Props) {\n  return (\n    <button\n      disabled={disabled}\n      className={`\n        border\n        disabled:cursor-not-allowed\n        disabled:opacity-[0.6]\n        flex\n        gap-[8px]\n        items-center\n        justify-center\n        bg-[color:--embeddable-controls-buttons-active-background]\n        border-[color:--embeddable-controls-buttons-active-border]\n        h-[--embeddable-controls-buttons-height]\n        hover:bg-[color:--embeddable-controls-buttons-hovered-background]\n        hover:border-[color:--embeddable-controls-buttons-hovered-border]\n        hover:text-[color:--embeddable-controls-buttons-hovered-fontColor]\n        pressed:bg-[color:--embeddable-controls-buttons-colors-pressed]\n        pressed:border-[color:--embeddable-controls-buttons-pressed-border]\n        pressed:text-[color:--embeddable-controls-buttons-pressed-fontColor]\n        px-[--embeddable-controls-buttons-paddingX]\n        py-[--embeddable-controls-buttons-paddingY]\n        rounded-[--embeddable-controls-buttons-radius] \n        text-[color:--embeddable-controls-buttons-active-fontColor]\n        text-[font-size:--embeddable-font-size]\n      `}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {showSpinner ? <Spinner show className={'relative'} size={'20'} /> : icon}\n      {buttonLabel}\n    </button>\n  );\n}\n"],"names":["inputs","results","downloading","loadData","state","DownloadButton_emb","defineComponent","Component","meta","downloadSVG","setEmbeddableState","setIsPreppingDownload","isPreppingDownload","buttonLabel","Button","jsx","theme","jsxs","props","mostRecentData","setMostRecentData","downloadAsCSV","C","useEffect","h","useTheme","embeddableState","useEmbeddableState","useState","icon","showSpinner","Spinner","onClick","disabled"],"mappings":"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"}