{"version":3,"file":"ComparisonFilter-CxV_EOtP-BQxt_qKu.js","sources":["../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/controls/ComparisonDatePicker/ComparisonFilter.emb.ts","../../../node_modules/@embeddable.com/vanilla-components/src/components/vanilla/controls/ComparisonDatePicker/index.tsx","../../../node_modules/@embeddable.com/vanilla-components/src/types/TimeComparison.type.emb.ts"],"sourcesContent":["import { Value } from '@embeddable.com/core';\nimport { EmbeddedComponentMeta, Inputs, defineComponent } from '@embeddable.com/react';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nimport TimeComparisonType from '../../../../types/TimeComparison.type.emb';\nimport { timeRangeToUTC } from '../../../util/timezone';\nimport Component from './index';\n\nexport const meta = {\n  name: 'ComparisonFilter',\n  label: 'Comparison filter',\n  defaultWidth: 920,\n  defaultHeight: 50,\n  classNames: ['on-top'],\n  category: 'Charts: time-series comparison',\n  inputs: [\n    {\n      name: 'title',\n      type: 'string',\n      label: 'Title',\n      category: 'Settings',\n    },\n    {\n      name: 'showGranularity',\n      type: 'boolean',\n      label: 'Show granularity picker',\n      category: 'Settings',\n      defaultValue: true,\n    },\n    {\n      name: 'defaultComparison',\n      type: TimeComparisonType,\n      label: 'Default comparison option',\n      defaultValue: 'Previous period',\n      category: 'Settings',\n    },\n    {\n      name: 'defaultPeriod',\n      type: 'timeRange',\n      label: 'Primary date range',\n      category: 'Pre-configured variables',\n    },\n    {\n      name: 'defaultGranularity',\n      type: 'granularity',\n      label: 'Default granularity',\n      category: 'Pre-configured variables',\n    },\n  ],\n  events: [\n    {\n      name: 'onChangePeriod',\n      label: 'Change Period',\n      properties: [\n        {\n          name: 'value',\n          type: 'timeRange',\n          label: 'value',\n        },\n      ],\n    },\n    {\n      name: 'onChangeComparison',\n      label: 'Change Comparison',\n      properties: [\n        {\n          name: 'value',\n          type: 'timeRange',\n          label: 'value',\n        },\n      ],\n    },\n    {\n      name: 'onChangeGranularity',\n      label: 'Change Granularity',\n      properties: [\n        {\n          name: 'value',\n          type: 'granularity',\n          label: 'value',\n        },\n      ],\n    },\n  ],\n  variables: [\n    {\n      name: 'primary date range',\n      type: 'timeRange',\n      inputs: ['defaultPeriod'],\n      defaultValue: { relativeTimeString: 'Last 30 days' },\n      events: [{ name: 'onChangePeriod', property: 'value' }],\n    },\n    {\n      name: 'comparison date range',\n      type: 'timeRange',\n      defaultValue: Value.noFilter(),\n      events: [{ name: 'onChangeComparison', property: 'value' }],\n    },\n    {\n      name: 'granularity',\n      type: 'granularity',\n      inputs: ['defaultGranularity'],\n      defaultValue: 'day',\n      events: [{ name: 'onChangeGranularity', property: 'value' }],\n    },\n  ],\n} as const satisfies EmbeddedComponentMeta;\n\nexport default defineComponent(Component, meta, {\n  /* The Inputs type is currently set to PICK properties from the \"events\" section of the meta object\n   * and add them to the \"inputs\" var that we're spreading to props. There are two issues:\n   * 1. It's not clear why we're adding events to \"inputs\" and if we need to spread both to\n   *    the props object, it might be better to have two parameters for the props function.\n   * 2. The Inputs type is not correctly PICKing all events - it only takes the first one. Thatâ€™s\n   *    the reason why it complains about onChangeComparison and onChangeGranularity, but not\n   *    onChangePeriod\n   * @ts-expect-error - to be fixed in @embeddable.com/react */\n  props: (inputs: Inputs<typeof meta>) => inputs,\n  events: {\n    onChangePeriod: (v) => {\n      if (!v) return { value: Value.noFilter() };\n\n      const value = timeRangeToUTC({ ...v, from: startOfDay(v.from), to: endOfDay(v.to) });\n\n      return { value: value };\n    },\n    onChangeComparison: (v) => {\n      if (!v) return { value: Value.noFilter() };\n\n      const value = timeRangeToUTC({ ...v, from: startOfDay(v.from), to: endOfDay(v.to) });\n\n      return { value: value };\n    },\n    onChangeGranularity: (value) => {\n      return { value: value || Value.noFilter() };\n    },\n  },\n});\n","import { Granularity, TimeRange } from '@embeddable.com/core';\nimport React from 'react';\n\nimport Container from '../../Container';\nimport DateRangeWithGranularity from '../DatePicker/components/DateRangeWithGranularity';\n\nexport type Props = {\n  defaultPeriod?: TimeRange;\n  defaultComparison?: string;\n  defaultGranularity?: Granularity;\n  showGranularity?: boolean;\n  onChangePeriod: (v: TimeRange | null) => void;\n  onChangeComparison: (v: TimeRange | null) => void;\n  onChangeGranularity: (v: Granularity | null) => void;\n};\n\nexport default (props: Props) => {\n  return (\n    <Container {...props}>\n      <DateRangeWithGranularity {...props} />\n    </Container>\n  );\n};\n","import { defineOption, defineType } from '@embeddable.com/core';\n\nconst TimeComparisonType = defineType('timeComparison', {\n  label: 'Time Comparison',\n  optionLabel: (value) => value,\n});\n\ndefineOption(TimeComparisonType, 'No comparison');\ndefineOption(TimeComparisonType, 'Previous period');\ndefineOption(TimeComparisonType, 'Previous week');\ndefineOption(TimeComparisonType, 'Previous month');\ndefineOption(TimeComparisonType, 'Previous quarter');\ndefineOption(TimeComparisonType, 'Previous year');\n\nexport default TimeComparisonType;\n"],"names":["value","Value","v","timeRangeToUTC","startOfDay","endOfDay","inputs","ComparisonFilter_emb","defineComponent","Component","meta","TimeComparisonType","props","Container","DateRangeWithGranularity","defineOption","defineType"],"mappings":"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"}